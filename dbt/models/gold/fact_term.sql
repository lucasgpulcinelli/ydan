{{ config(materialized='table') }}

WITH

TIMESTAMP_TABLE AS (
  SELECT *
  FROM {{ ref('dim_timestamp') }}
),

DATE_TABLE AS (
  SELECT *
  FROM {{ ref('dim_date') }}
),

DICTIONARY AS (
  SELECT *
  FROM {{ ref('dim_dictionary') }}
),

VIDEOS AS (
  SELECT *
  FROM {{ ref('dim_video') }}
),

CHANNELS AS (
  SELECT *
  FROM {{ ref('dim_channel') }}
),

CAPTIONS AS (
  SELECT *
  FROM {{ ref('captions') }}
),

HEATMAP AS (
  SELECT *
  FROM {{ ref('heatmap') }}
)


SELECT 
  CHANNELS.ID_CHANNEL AS id_channel,
  DICTIONARY.ID_DICTIONARY AS id_dictionary,
  VIDEOS.ID_VIDEO AS id_video,
  TIMESTAMP_TABLE.ID_TIMESTAMP AS id_timestamp,
  DATE_TABLE.ID_DATE AS id_date,
  1 AS count,
  HEATMAP.HEATMAP_VALUE_FLOAT AS heatmap_value,
  HEATMAP.HEATMAP_VALUE_FLOAT * CAPTIONS.CAPTION_VIDEO_VIEWS_NUM AS relevance

FROM CAPTIONS

JOIN HEATMAP
  ON HEATMAP.HEATMAP_VIDEO_ID = CAPTIONS.CAPTION_VIDEO_ID AND
      HEATMAP.HEATMAP_START_SECONDS_FLOAT <= CAPTIONS.CAPTION_SECONDS_FLOAT AND
      HEATMAP.HEATMAP_END_SECONDS_FLOAT >= CAPTIONS.CAPTION_SECONDS_FLOAT  

JOIN TIMESTAMP_TABLE
  ON ROUND(CAPTION_SECONDS_FLOAT) = TIMESTAMP_TABLE.ID_timestamp

JOIN DATE_TABLE
  ON EXTRACT(DAY FROM CAPTIONS.CAPTION_VIDEO_UPLOAD_DATE) = DATE_TABLE.day_component_date AND
      EXTRACT(YEAR FROM CAPTIONS.CAPTION_VIDEO_UPLOAD_DATE) = DATE_TABLE.year_component_date AND
      EXTRACT(MONTH FROM CAPTIONS.CAPTION_VIDEO_UPLOAD_DATE) = DATE_TABLE.month_component_date

JOIN DICTIONARY
  ON CAPTIONS.CAPTION_WORD_TEXT = DICTIONARY.WORD_DICTIONARY

JOIN VIDEOS
  ON CAPTIONS.CAPTION_VIDEO_ID = VIDEOS.YOUTUBE_ID_VIDEO

JOIN CHANNELS
  ON CAPTIONS.CAPTION_CHANNEL_ID = CHANNELS.YOUTUBE_ID_CHANNEL
